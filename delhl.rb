# Эта программа удаляет все пояснения из текстовых файлов рядом с собой и в соседних папках.
#

# Обработчик файла с расшинрением .rb
def clear_file_rb
  @f1.each_line do |line|

    # Анализируем строку на пустоту (Пустая строка имеет размер = 1 (как ни странно))
    if line.size > 1

      # ... а если строка длиннее чем пустая, то начинаем её обрабатывать.
      new_line = nil

      # ... проверяем, есть ли в строке символ # пояснения (ремарки)
      if line.include? '#'

        arr = line.split '#'              # ... если да, то делим строку на части по этому знвку

                                          # puts arr.inspect # Контроль обработки

        new_line = arr[0] + "\n"          # ... возьмём только первый элемент разделённой строки
                                          # ... и добавим к нему признак окончания строки (не '') 

      else
        new_line = line               # Иначе вщзьмём всю строку, т.к. в ней нет символа # (ремарки)

      end
      
      # Пишем в файл очищенную строку
      if new_line.size >= 2           # Только если строка не пустая,
      
        @f2.write new_line            # ... пишем её в файл @f2
        puts new_line                 # Выводим строку на экран (debug)
        
      end
    end
    # Закончили работать с текущей строкой, переходим к следующей
  end
  # Здесь строки кончились и можно покинуть эту процедуру
end

# Обработчик файла с расшинрением .erb
def clear_file_erb
end

# ======================== О С Н О В Н А Я =============== П Р О Г Р А М М А =========================

# Выводим стартовое сообщение о прогрвмме

# Считываем файлы в текущей папке

# Выбираем файл для обработки

# Анализируем выбранный файл
file_type = 'rb'

# Формируем имя временного файла для записи
tmp_file_name = 'app_' + '.' + file_type

# Открываем выбранный файл для чтения информации
@f1 = File.open 'app.rb', 'r'

# Открываем новый файл для записи информации
@f2 = File.open tmp_file_name, 'w'

if    file_type == 'rb'   then clear_file_rb    # Обработка файла RUBY
          
elsif file_type == 'erb'  then clear_file_erb   # Обработка файла View ERB
          
else                      # Неизвестный программе формат файла
                          puts "File format is not confirm"
                          gets
end

# Закрываем файл из которого читали грязную информацию  
@f1.close

# Закрываем файл в который писали очищенную информацию  
@f2.close
 
puts "_____________________________________STOPED PROGRAM!"
